#lang racket
;Упражнение 1.4.
;Как работает следующая процедура:

;Объявляем процедуру 'a-plus-abs-b' с двумя аргументами 'a b'.
;В условии сказано, если 'b' больше нуля, берем первый оператор '+' и выполняем с ним операцию
;над 'a b', а иначе оператор '-'.
(define (a-plus-abs-b a b)
  ((if (> b 0) + -) a b))

(a-plus-abs-b -3 4);(-3+4)=1
(a-plus-abs-b 3 4);(3+4)=7
(a-plus-abs-b 3 -4);минус на минус дает плюс! (3-(-4))=7
(a-plus-abs-b -3 4);(-3+4)=1
(a-plus-abs-b -3 -4);(-3-(-4))=1 
(a-plus-abs-b 3 0);(3+0)=3
(a-plus-abs-b 0 4);(0+4)=4
